---
import { menuLinks } from "@/site-config";
import { Image } from 'astro:assets';

import Search from "../Search.astro";
import ThemeToggle from "../ThemeToggle.astro";

import logo from '/src/assets/microwave-logo.png';

const url = new URL(Astro.request.url);
---

<header class="group relative mb-28 flex" id="main-header">

	<!-- I use this instead of the html base image to make sure that the image is already loaded before the page is shown -->
	<Image src={logo} alt="a" class="invisible sm:visible hidden sm:block size-20 my-auto rounded-xl mx-3"/>


	<div class="flex flex-col justify-center w-full">
		<!-- Upper header -->
		<div class="flex">
			<mobile-button class="my-auto text-accent">
				<button
					aria-expanded="false"
					aria-haspopup="menu"
					aria-label="Open main menu"
					class="group relative me-2 my-auto h-7 w-7 sm:invisible sm:hidden"
					id="toggle-navigation-menu"
					type="button"
				>
					<svg
						aria-hidden="true"
						class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
						fill="none"
						focusable="false"
						id="line-svg"
						stroke="currentColor"
						stroke-width="2"
						viewBox="0 0 24 24"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path d="M0.0 3h24m-24 6h24m-24 6h24" stroke-linecap="round" stroke-linejoin="round"
						></path>
					</svg>
					<svg
						aria-hidden="true"
						class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
						class="text-accent"
						fill="none"
						focusable="false"
						id="cross-svg"
						stroke="currentColor"
						stroke-width="1.5"
						viewBox="0 0 24 24"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"></path>
					</svg>
				</button>
			</mobile-button>
			<a aria-current={url.pathname === "/" ? "page" : false} href="/" class="text-xl sm:text-3xl text-accent-2 font-bold">MICROWAVE'S BLOG</a>

			<!-- Keep on right -->
			<div class="flex ms-auto">
				<Search />
				<ThemeToggle />
			</div>
		</div>

		<hr class="h-px border-0 bg-quote mx-1 sm:my-1">

		<!-- Lower header -->
		<div class="flex">
			<span class="text-l sm:text-base">Massimiliano Dello Spirito Santo</span>

			<!-- Keep on right -->
			<div class="flex ms-auto">
				<nav
					aria-label="Main menu"
					class="text-base absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-bgColor/[.85] py-4 text-accent shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:flex sm:flex-row sm:divide-x sm:divide-solid sm:divide-accent sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
					id="navigation-menu"
				>
					{
						menuLinks.map((link) => (
							<a
								aria-current={url.pathname === link.path ? "page" : false}
								class="px-4 py-4 underline-offset-2 sm:py-0 sm:hover:underline"
								data-astro-prefetch
								href={link.path}
							>
								{link.title}
							</a>
						))
					}
				</nav>
			</div>
		</div>
		<a
			aria-current={url.pathname === "/" ? "page" : false}
			class="inline-flex items-center grayscale hover:filter-none sm:relative sm:inline-block"
			href="/"
		>	
		</a>
	</div>
</header>

<script>
	import { toggleClass } from "@/utils";

	class MobileNavBtn extends HTMLElement {
		private headerEl: HTMLElement;
		private menuOpen: boolean;
		private mobileButtonEl: HTMLButtonElement;

		toggleMobileMenu = () => {
			toggleClass(this.headerEl, "menu-open");
			this.menuOpen = !this.menuOpen;
			this.mobileButtonEl.setAttribute("aria-expanded", this.menuOpen.toString());
		};

		constructor() {
			super();
			this.headerEl = document.getElementById("main-header")!;
			this.mobileButtonEl = this.querySelector("button") as HTMLButtonElement;
			this.menuOpen = false;

			this.mobileButtonEl.addEventListener("click", this.toggleMobileMenu);
		}
	}

	customElements.define("mobile-button", MobileNavBtn);
</script>
